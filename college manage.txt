import java.util.ArrayList;
import java.util.Scanner;
public class CollegeManagementSystem {
    static ArrayList<Student> students = new ArrayList<>();
    static ArrayList<FeeReport> feeReports = new ArrayList<>();
    static ArrayList<LibrarySystem> librarySystems = new ArrayList<>();
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("1. Add Student");
            System.out.println("2. View Student Profile");
            System.out.println("3. Enter Fee Details");
            System.out.println("4. View Fee Report");
            System.out.println("5. Library System");
            System.out.println("6. View Marksheet");
            System.out.println("7. Exit");

            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    addStudent(scanner);
                    break;
                case 2:
                    viewStudentProfile(scanner);
                    break;
                case 3:
                    enterFeeDetails(scanner);
                    break;
                case 4:
                    viewFeeReport(scanner);
                    break;
                case 5:
                    librarySystem(scanner);
                    break;
                case 6:
                    viewMarksheet(scanner);
                    break;
                case 7:
                    System.out.println("Exiting program. Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
            }
        }
    }

    private static void addStudent(Scanner scanner) {
        System.out.print("Enter student name: ");
        String name = scanner.nextLine();

        System.out.print("Enter roll number: ");
        int rollNumber = scanner.nextInt();

        System.out.print("Enter marks: ");
        double marks = scanner.nextDouble();

        students.add(new Student(name, rollNumber, marks));
        System.out.println("Student added successfully!");
    }

    private static void viewStudentProfile(Scanner scanner) {
        System.out.print("Enter roll number: ");
        int rollNumber = scanner.nextInt();
        for (Student student : students) {
            if (student.rollNumber == rollNumber) {
                System.out.println("Student Profile:");
                System.out.println("Name: " + student.name);
                System.out.println("Roll Number: " + student.rollNumber);
                System.out.println("Marks: " + student.marks);
                return;
            }
        }

        System.out.println("Student not found!");
    }

    private static void enterFeeDetails(Scanner scanner) {
        System.out.print("Enter roll number: ");
        int rollNumber = scanner.nextInt();

        System.out.print("Enter fees paid: ");
        double feesPaid = scanner.nextDouble();

        feeReports.add(new FeeReport(rollNumber, feesPaid));
        System.out.println("Fee details entered successfully!");
    }

    private static void viewFeeReport(Scanner scanner) {
        System.out.print("Enter roll number: ");
        int rollNumber = scanner.nextInt();

        for (FeeReport feeReport : feeReports) {
            if (feeReport.rollNumber == rollNumber) {
                System.out.println("Fee Report:");
                System.out.println("Roll Number: " + feeReport.rollNumber);
                System.out.println("Fees Paid: " + feeReport.feesPaid);
                return;
            }
        }

        System.out.println("Fee report not found!");
    }

    private static void librarySystem(Scanner scanner) {
        System.out.print("Enter roll number: ");
        int rollNumber = scanner.nextInt();

        LibrarySystem librarySystem = findLibrarySystem(rollNumber);

        System.out.println("1. Borrow Book");
        System.out.println("2. Return Book");
        System.out.println("3. View Books Borrowed");
        System.out.print("Enter your choice: ");
        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character

        switch (choice) {
            case 1:
                System.out.print("Enter book name to borrow: ");
                String bookToBorrow = scanner.nextLine();
                librarySystem.borrowBook(bookToBorrow);
                System.out.println("Book borrowed successfully!");
                break;
            case 2:
                System.out.print("Enter book name to return: ");
                String bookToReturn = scanner.nextLine();
                librarySystem.returnBook(bookToReturn);
                System.out.println("Book returned successfully!");
                break;
            case 3:
                System.out.println("Books Borrowed:");
                for (String book : librarySystem.booksBorrowed) {
                   System.out.println(book);
                }
                break;
            default:
                System.out.println("Invalid choice. Please enter a valid option.");
        }
    }
    private static LibrarySystem findLibrarySystem(int rollNumber) {
        for (LibrarySystem librarySystem : librarySystems) {
            if (librarySystem.rollNumber == rollNumber) {
                return librarySystem;
            }
        }
        LibrarySystem newLibrarySystem = new LibrarySystem(rollNumber);
        librarySystems.add(newLibrarySystem);
        return newLibrarySystem;
    }

    private static void viewMarksheet(Scanner scanner) {
        System.out.print("Enter roll number: ");
        int rollNumber = scanner.nextInt();

        for (Student student : students) {
            if (student.rollNumber == rollNumber) {
                System.out.println("Marksheet:");
                System.out.println("Roll Number: " + student.rollNumber);
                System.out.println("Name: " + student.name);
                System.out.println("Marks: " + student.marks);
                return;
            }
        }
        System.out.println("Marksheet not found!");
    }
}
class Student {
    String name;
    int rollNumber;
    double marks;

    public Student(String name, int rollNumber, double marks) {
        this.name = name;
        this.rollNumber = rollNumber;
        this.marks = marks;
    }
}
class FeeReport {
    int rollNumber;
    double feesPaid;

    public FeeReport(int rollNumber, double feesPaid) {
        this.rollNumber = rollNumber;
        this.feesPaid = feesPaid;
    }
}
class LibrarySystem {
    int rollNumber;
    ArrayList<String> booksBorrowed;

    public LibrarySystem(int rollNumber) {
        this.rollNumber = rollNumber;
        this.booksBorrowed = new ArrayList<>();
    }
    public void borrowBook(String book) {
        booksBorrowed.add(book);
    }
    public void returnBook(String book) {
        booksBorrowed.remove(book);
    }
}